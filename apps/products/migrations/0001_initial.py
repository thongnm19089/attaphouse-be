# Generated by Django 3.2.7 on 2021-10-22 03:47

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tags', '0001_initial'),
        ('categories', '0001_initial'),
        ('uploads', '0001_initial'),
        ('sizes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'brand',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'color',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('sku', models.CharField(max_length=50)),
                ('url', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('price_new', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('price_old', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('quantity', models.IntegerField(default=0)),
                ('coupon', models.CharField(blank=True, max_length=50)),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Scheduled', 'Scheduled'), ('Hidden', 'Hidden')], default='Published', max_length=50)),
                ('publish_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.brand')),
                ('color', models.ManyToManyField(blank=True, related_name='products', to='products.Color')),
                ('image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_image', to='uploads.file')),
                ('size', models.ManyToManyField(blank=True, related_name='products', to='sizes.Size')),
                ('sub_category', models.ManyToManyField(blank=True, related_name='products', to='categories.SubCategory')),
                ('sub_image', models.ManyToManyField(blank=True, related_name='product_sub_image', to='uploads.File')),
                ('tag', models.ManyToManyField(blank=True, related_name='products', to='tags.Tag')),
            ],
            options={
                'db_table': 'product',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='color',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_color_name'),
        ),
        migrations.AddConstraint(
            model_name='brand',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_brand_name'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted__isnull', True)), fields=('url',), name='unique_product_url'),
        ),
    ]
